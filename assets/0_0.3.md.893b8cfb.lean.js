import{_ as n,c as s,o,b as e,d as t}from"./app.f4c18165.js";const g=JSON.parse('{"title":"全文导读","description":"","frontmatter":{},"headers":[],"relativePath":"0/0.3.md"}'),a={name:"0/0.3.md"},r=e("h1",{id:"全文导读",tabindex:"-1"},[t("全文导读 "),e("a",{class:"header-anchor",href:"#全文导读","aria-hidden":"true"},"#")],-1),c=e("p",null,"DDD（Domain-Driven Design，领域驱动设计）是面向对象和SOLID演化的极致，是业务代码的巅峰，是微服务架构的灵魂。",-1),_=e("p",null,"虽然DDD非常火爆，但鲜有完整落地的案例。大部分时候，我们听得比较多的，都是“根据DDD的思想做的服务拆分“之类的话术。我个人感觉这种话术基本都是在碰瓷。",-1),d=e("p",null,[t("落地难的原因有很多，一方面是因为DDD不是技术架构，无法像日常开发一样定个接口文档然后大家按照文档按图索骥开发，每个人、每个研发团队的理解程度不一样；一方面是DDD的门槛比较高，学习曲线非常陡峭，《 "),e("strong",null,"领域驱动设计 软件核心复杂性应对之道"),t(" 》、《 "),e("strong",null,"实现领域驱动设计"),t(" 》概念繁多、晦涩难懂，什么经典四层架构、六边形架构、整洁架构、CQRS、应用服务、领域服务、DPS等概念花里胡哨非常多，里面水太深新手实在把握不住。")],-1),i=[r,c,_,d];function D(l,p,h,u,m,f){return o(),s("div",null,i)}const S=n(a,[["render",D]]);export{g as __pageData,S as default};
