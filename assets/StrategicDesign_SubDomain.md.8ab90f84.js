import{_ as e,c as a,o as t,a as r}from"./app.d9f712a7.js";const m=JSON.parse('{"title":"子域","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 子域的定义","slug":"_1-子域的定义","link":"#_1-子域的定义","children":[]},{"level":2,"title":"2. 子域划分","slug":"_2-子域划分","link":"#_2-子域划分","children":[]}],"relativePath":"StrategicDesign/SubDomain.md"}'),i={name:"StrategicDesign/SubDomain.md"},n=r('<h1 id="子域" tabindex="-1">子域 <a class="header-anchor" href="#子域" aria-hidden="true">#</a></h1><h2 id="_1-子域的定义" tabindex="-1">1. 子域的定义 <a class="header-anchor" href="#_1-子域的定义" aria-hidden="true">#</a></h2><p>子域是对领域进行精炼的产物。精炼是把一堆混杂在一起的组件分开的过程，以便从中提取出最重要、最有价值的内容。</p><p>子域的划分，是对已有的领域进行精炼的结果。因此，要划分子域，必须先有领域、先有限界上下文、先有模型。</p><p>目前业界把子域划分定义在所谓的问题空间，把限界上下文归在解空间，这其实隐含了一种因果关系：先有问题才能有“解”，也就是说必须先有子域才有限界上下文，这是错误的认知。</p><p>我们之所以对子域的概念觉得别扭，是因为子域并不是一开始就能划分好的，而是对领域进行精炼的过程，就是因为业界对子域的认识颠倒了，所以业界没有办法对限界上下文和子域之间的关系给出一个明确的解释。</p><p>正确的认知步骤是：先有领域，划定限界上下文，建模领域模型，然后根据现有的限界上下文和模型进行精炼抽取子域。</p><h2 id="_2-子域划分" tabindex="-1">2. 子域划分 <a class="header-anchor" href="#_2-子域划分" aria-hidden="true">#</a></h2>',8),_=[n];function s(c,d,o,h,l,p){return t(),a("div",null,_)}const f=e(i,[["render",s]]);export{m as __pageData,f as default};
