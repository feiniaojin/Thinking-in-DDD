import{_ as e,c as a,o as i,a as l}from"./app.268a31c3.js";const g=JSON.parse('{"title":"通用语言（Ubiquitous Language）","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 通用语言的概念","slug":"_1-通用语言的概念","link":"#_1-通用语言的概念","children":[]},{"level":2,"title":"2. 通用语言的构建","slug":"_2-通用语言的构建","link":"#_2-通用语言的构建","children":[]},{"level":2,"title":"3. 通用语言的维护","slug":"_3-通用语言的维护","link":"#_3-通用语言的维护","children":[]}],"relativePath":"StrategicDesign/UbiquitousLanguage.md"}'),t={name:"StrategicDesign/UbiquitousLanguage.md"},u=l('<h1 id="通用语言-ubiquitous-language" tabindex="-1">通用语言（Ubiquitous Language） <a class="header-anchor" href="#通用语言-ubiquitous-language" aria-hidden="true">#</a></h1><h2 id="_1-通用语言的概念" tabindex="-1">1. 通用语言的概念 <a class="header-anchor" href="#_1-通用语言的概念" aria-hidden="true">#</a></h2><p>通用语言（Ubiquitous Language）指的是在开发团队和领域专家之间所使用的共同语言。</p><p>通用语言的核心思想是将业务专家的语言和开发人员的语言进行整合，形成一种共同的语言，这样就可以避免在沟通过程中出现理解上的差异。</p><p>通用语言的好处是显而易见的。首先，它可以帮助开发人员更好地理解业务需求，从而更好地设计和实现软件功能。其次，它可以提高开发效率，减少沟通成本，避免在沟通过程中出现理解上的差异。最后，它可以提高软件的质量和可维护性，使得软件更加符合业务需求。</p><p>通用语言，就是使用达成共识的术语进行沟通，避免术语的歧义，提高沟通效率，消除团队成员之间的信息不对称。</p><p>互联网黑话我们都知道，这个其实已经是业界的通用语言了，举个例子：</p><blockquote><p>你是B里面比较靠前的</p></blockquote><blockquote><p>其实，我对你是有一些失望的。当初给你定级px，是高于你面试时的水平的。我是希望进来后，你能够拼一把，快速成长起来的。px这个层级，不是把事情做好就可以的。</p></blockquote><blockquote><p>你做的事情，他的价值点在哪里？你是否做出了壁垒，形成了核心竞争力?你做的事情,和公司内其他团队的差异化在哪里?你的事情，是否沉淀了一套可复用的物理资料和方法论?为什么是你来做，其他人不能做吗？你需要有自己的判断力，而不是我说什么你就做什么。后续,把你的思考沉淀到日报周报月报里，我希望看到你的思考，而不仅仅是进度。</p></blockquote><h2 id="_2-通用语言的构建" tabindex="-1">2. 通用语言的构建 <a class="header-anchor" href="#_2-通用语言的构建" aria-hidden="true">#</a></h2><p>通用语言的构建需要全体团队成员共同参与。以下是构建通用语言的步骤：</p><ul><li>定义业务领域</li></ul><p>首先需要明确业务领域是什么。业务领域可以是一个业务部门、一个业务流程或者一个产品。在定义业务领域时，需要考虑业务的范围和复杂度，以及与其他业务领域的关系。</p><ul><li>收集业务知识</li></ul><p>收集业务知识是构建通用语言的关键步骤。团队成员需要与业务专家进行交流，了解业务流程、业务规则、业务需求等方面的知识。在收集业务知识时，需要注意保持沟通的准确性和完整性。</p><ul><li>定义通用语言</li></ul><p>在收集业务知识的基础上，团队成员可以开始定义通用语言。通用语言应该包括专业术语、概念和定义。在定义通用语言时，需要遵循以下原则：</p><p>术语应该简洁明了，不要使用晦涩难懂的术语；</p><p>概念应该清晰明了，不要使用模糊的概念；</p><p>定义应该准确无误，不要出现歧义。</p><ul><li>验证通用语言</li></ul><p>定义通用语言后，需要对其进行验证。团队成员可以通过讨论、模拟场景等方式来验证通用语言的准确性和适用性。在验证过程中，需要注意收集反馈和改进建议。</p><h2 id="_3-通用语言的维护" tabindex="-1">3. 通用语言的维护 <a class="header-anchor" href="#_3-通用语言的维护" aria-hidden="true">#</a></h2><p>通用语言不是一成不变的，它需要随着业务的变化而不断更新和维护。以下是通用语言的维护建议：</p><ul><li>定期回顾通用语言</li></ul><p>团队应该定期回顾通用语言，检查是否需要进行更新和调整。如果业务发生了变化，通用语言也需要相应地进行更新。</p><ul><li>提供培训和文档</li></ul><p>团队成员需要了解通用语言的定义和使用方法。因此，需要提供相应的培训和文档，以便团队成员学习和使用通用语言。</p><ul><li>吸收反馈和改进建议</li></ul><p>通用语言的改进需要吸收来自团队成员和业务专家的反馈和建议。团队应该鼓励成员积极参与通用语言的改进，以便不断提高通用语言的准确性和适用性。</p>',31),p=[u];function n(o,r,s,_,c,d){return i(),a("div",null,p)}const b=e(t,[["render",n]]);export{g as __pageData,b as default};
