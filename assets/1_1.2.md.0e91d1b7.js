import{_ as e,c as d,o as t,a as r}from"./app.1136664d.js";const p=JSON.parse('{"title":"1.2 如何学习DDD","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.2.1 阅读DDD领域的经典著作","slug":"_1-2-1-阅读ddd领域的经典著作","link":"#_1-2-1-阅读ddd领域的经典著作","children":[]},{"level":2,"title":"1.2.2 阅读DDD开源项目","slug":"_1-2-2-阅读ddd开源项目","link":"#_1-2-2-阅读ddd开源项目","children":[]},{"level":2,"title":"1.2.3 多与同行交流","slug":"_1-2-3-多与同行交流","link":"#_1-2-3-多与同行交流","children":[]}],"relativePath":"1/1.2.md"}'),a={name:"1/1.2.md"},D=r('<h1 id="_1-2-如何学习ddd" tabindex="-1">1.2 如何学习DDD <a class="header-anchor" href="#_1-2-如何学习ddd" aria-hidden="true">#</a></h1><h2 id="_1-2-1-阅读ddd领域的经典著作" tabindex="-1">1.2.1 阅读DDD领域的经典著作 <a class="header-anchor" href="#_1-2-1-阅读ddd领域的经典著作" aria-hidden="true">#</a></h2><p>笔者主要推荐三本书，分别是《 <strong>领域驱动设计 软件核心复杂性应对之道</strong> 》、《 <strong>实现领域驱动设计</strong> 》、《 <strong>微服务架构设计模式</strong> 》。</p><p>《 <strong>领域驱动设计 软件核心复杂性应对之道</strong> 》、《 <strong>实现领域驱动设计</strong> 》这两本书相信大家没有什么疑问，是DDD非常经典的书籍。</p><p>《 <strong>微服务架构设计模式</strong> 》这本书很多人可能会问，我是学DDD的，你给我推荐微服务架构设计模式是干什么呢？我们知道DDD是微服务的灵魂，而《 <strong>微服务架构设计模式</strong> 》这本书在讲微服务时，完完全全是基于DDD展开的，尤其是前面七章，可以说是DDD在微服务时代的实战。很多人看《 <strong>微服务架构设计模式</strong> 》时觉得晦涩难懂，对很多概念觉得云里雾里，正是由于缺乏了DDD的知识储备。</p><h2 id="_1-2-2-阅读ddd开源项目" tabindex="-1">1.2.2 阅读DDD开源项目 <a class="header-anchor" href="#_1-2-2-阅读ddd开源项目" aria-hidden="true">#</a></h2><p>笔者曾经阅读了github上百个开源的DDD相关项目。当然了，这些项目大多是DEMO级别的，很少有真正生产实战的项目，饶是如此，这些DEMO项目也斩获了不少star，足以证明研发人员对DDD的渴望。这也促使笔者有一个想法，未来希望使用DDD把目前热门的场景落地一遍，例如很热门的电商、直播带货等。原本计划今年上半年推动身边的朋友接触掌握DDD，下半年开始实施，结果三月份大裁员，有不少朋友面临工作压力，一直拖到现在还没有实施。如果读者对这个想法有兴趣，可以联系笔者，我们一起付诸实践。</p><h2 id="_1-2-3-多与同行交流" tabindex="-1">1.2.3 多与同行交流 <a class="header-anchor" href="#_1-2-3-多与同行交流" aria-hidden="true">#</a></h2><p>欢迎加本书作者微信（qyj_000100），添加微信成功后我拉您进入DDD讨论群。</p>',9),n=[D];function s(_,o,i,h,c,l){return t(),d("div",null,n)}const u=e(a,[["render",s]]);export{p as __pageData,u as default};
